# Generated by Django 4.2.3 on 2023-07-31 13:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessoryInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_model', models.CharField(max_length=100, verbose_name='设备型号')),
                ('device_name', models.CharField(max_length=100, verbose_name='设备名称')),
                ('device_description', models.TextField(verbose_name='设备描述')),
                ('entry_date', models.DateTimeField(auto_now_add=True, verbose_name='入库时间')),
                ('recipient', models.CharField(max_length=100, verbose_name='领取人')),
                ('borrow_date', models.DateField(blank=True, null=True, verbose_name='借用时间')),
                ('return_date', models.DateField(blank=True, null=True, verbose_name='归还时间')),
            ],
        ),
        migrations.CreateModel(
            name='BoardInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=100, verbose_name='板卡型号')),
                ('serial_number', models.CharField(max_length=100, unique=True, verbose_name='板卡编号')),
                ('cooling_method', models.CharField(choices=[('active', '主动'), ('passive', '被动')], default='passive', max_length=20, verbose_name='散热方式')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='部门名称')),
                ('leader', models.CharField(max_length=100, verbose_name='部门领导')),
            ],
        ),
        migrations.CreateModel(
            name='OSInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(unique=True, validators=[django.core.validators.validate_ipv46_address], verbose_name='IP 地址')),
                ('device_type', models.CharField(choices=[('服务器', '服务器'), ('PC', 'PC'), ('工控机', '工控机'), ('虚拟机', '虚拟机')], max_length=100, verbose_name='设备类型')),
                ('bios_password', models.CharField(blank=True, max_length=100, null=True, verbose_name='BIOS 密码')),
                ('os_login_user', models.CharField(max_length=100, verbose_name='OS 登录用户')),
                ('os_login_password', models.CharField(max_length=100, verbose_name='OS 登录密码')),
                ('bmc_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='BMC IP')),
                ('bmc_user', models.CharField(blank=True, max_length=100, null=True, verbose_name='BMC 用户')),
                ('bmc_password', models.CharField(blank=True, max_length=100, null=True, verbose_name='BMC 密码')),
            ],
        ),
        migrations.CreateModel(
            name='PCInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_code', models.CharField(default='00000', max_length=100, unique=True, verbose_name='设备编码')),
                ('cpu_arch', models.CharField(max_length=100, verbose_name='CPU 架构')),
                ('cpu_model', models.CharField(max_length=100, verbose_name='CPU 型号')),
                ('chassis_type', models.CharField(max_length=100, verbose_name='机箱类型')),
                ('memory_size', models.CharField(max_length=100, verbose_name='内存大小')),
                ('hard_disk_size', models.CharField(max_length=100, verbose_name='硬盘大小')),
                ('location', models.CharField(default='办公室', max_length=100, verbose_name='所在位置')),
                ('asset_responsible_person_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='资产负责人')),
            ],
        ),
        migrations.CreateModel(
            name='SummaryInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accessory_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='summary_info', to='cmdb.accessoryinfo', verbose_name='配件信息')),
                ('boards', models.ManyToManyField(related_name='summary_info', to='cmdb.boardinfo', verbose_name='板卡信息')),
                ('os_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='summary_info', to='cmdb.osinfo', verbose_name='OS信息')),
                ('pc_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='summary_info', to='cmdb.pcinfo', verbose_name='PC信息')),
            ],
        ),
        migrations.CreateModel(
            name='PersonnelInfo',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='姓名')),
                ('email', models.EmailField(max_length=100, verbose_name='电子邮件')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.department', verbose_name='部门')),
            ],
            options={
                'verbose_name': '人员信息',
                'verbose_name_plural': '人员信息',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSummaryInfo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('accessory_info', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.accessoryinfo', verbose_name='配件信息')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('os_info', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.osinfo', verbose_name='OS信息')),
                ('pc_info', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cmdb.pcinfo', verbose_name='PC信息')),
            ],
            options={
                'verbose_name': 'historical summary info',
                'verbose_name_plural': 'historical summary infos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPCInfo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('device_code', models.CharField(db_index=True, default='00000', max_length=100, verbose_name='设备编码')),
                ('cpu_arch', models.CharField(max_length=100, verbose_name='CPU 架构')),
                ('cpu_model', models.CharField(max_length=100, verbose_name='CPU 型号')),
                ('chassis_type', models.CharField(max_length=100, verbose_name='机箱类型')),
                ('memory_size', models.CharField(max_length=100, verbose_name='内存大小')),
                ('hard_disk_size', models.CharField(max_length=100, verbose_name='硬盘大小')),
                ('location', models.CharField(default='办公室', max_length=100, verbose_name='所在位置')),
                ('asset_responsible_person_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='资产负责人')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical pc info',
                'verbose_name_plural': 'historical pc infos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOSInfo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(db_index=True, validators=[django.core.validators.validate_ipv46_address], verbose_name='IP 地址')),
                ('device_type', models.CharField(choices=[('服务器', '服务器'), ('PC', 'PC'), ('工控机', '工控机'), ('虚拟机', '虚拟机')], max_length=100, verbose_name='设备类型')),
                ('bios_password', models.CharField(blank=True, max_length=100, null=True, verbose_name='BIOS 密码')),
                ('os_login_user', models.CharField(max_length=100, verbose_name='OS 登录用户')),
                ('os_login_password', models.CharField(max_length=100, verbose_name='OS 登录密码')),
                ('bmc_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='BMC IP')),
                ('bmc_user', models.CharField(blank=True, max_length=100, null=True, verbose_name='BMC 用户')),
                ('bmc_password', models.CharField(blank=True, max_length=100, null=True, verbose_name='BMC 密码')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical os info',
                'verbose_name_plural': 'historical os infos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBoardInfo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('model', models.CharField(max_length=100, verbose_name='板卡型号')),
                ('serial_number', models.CharField(db_index=True, max_length=100, verbose_name='板卡编号')),
                ('cooling_method', models.CharField(choices=[('active', '主动'), ('passive', '被动')], default='passive', max_length=20, verbose_name='散热方式')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical board info',
                'verbose_name_plural': 'historical board infos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAccessoryInfo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('device_model', models.CharField(max_length=100, verbose_name='设备型号')),
                ('device_name', models.CharField(max_length=100, verbose_name='设备名称')),
                ('device_description', models.TextField(verbose_name='设备描述')),
                ('entry_date', models.DateTimeField(blank=True, editable=False, verbose_name='入库时间')),
                ('recipient', models.CharField(max_length=100, verbose_name='领取人')),
                ('borrow_date', models.DateField(blank=True, null=True, verbose_name='借用时间')),
                ('return_date', models.DateField(blank=True, null=True, verbose_name='归还时间')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical accessory info',
                'verbose_name_plural': 'historical accessory infos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
